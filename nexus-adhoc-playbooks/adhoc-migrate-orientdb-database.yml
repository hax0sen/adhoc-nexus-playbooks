- name: Migrate to H2 Database
  hosts: nexus-legacy
  become: true
  gather_facts: true
  vars:
    # --- Core Configuration ---
    nexus_version: "3.70.4-02" # Run this version to update to Latest supported orienbtdb version before migrating to H2
    nexus_systemd_unit: "/etc/systemd/system/nexus.service"
    nexus_backup_dir: "/var/my-nexus-backup"
    nexus_data_dir: "/var/nexus"

    # Database migration variables
    nexus_migrator_jar: "nexus-db-migrator-{{ nexus_version }}.jar"
    nexus_migrator_url: "https://download.sonatype.com/nexus/nxrm3-migrator"

  tasks:
    - name: Prepare for H2 Migration (if applicable) # Manually backup fist via gui and save to backup dir {{ nexus_backup_dir }}
      when: nexus_version == "3.70.4-02"
      block:
        - name: Ensure backup directory exists
          ansible.builtin.file:
            path: "{{ nexus_backup_dir }}"
            state: directory
            owner: nexus
            group: nexus
            mode: "0755"

        - name: Confirm OrientDB backup has been triggered via GUI
          ansible.builtin.pause:
            prompt: |
              Please confirm that you have manually triggered the OrientDB database backup
              through the Nexus GUI and downloaded it to {{ nexus_backup_dir }}.
              Press Enter to continue if done, or Ctrl+C to cancel.
      
        - name: Download Nexus DB Migrator JAR
          ansible.builtin.get_url:
            url: "{{ nexus_migrator_url }}/{{ nexus_migrator_jar }}"
            dest: "{{ nexus_backup_dir }}/{{ nexus_migrator_jar }}"
            mode: "0644"
            owner: nexus
            group: nexus
            validate_certs: yes

    # stop nexus service before migration
        - name: Check if Nexus systemd service file exists
          ansible.builtin.stat:
            path: "{{ nexus_systemd_unit }}"
          register: nexus_systemd_service_file

        - name: Stop Nexus systemd service if running
          ansible.builtin.systemd:
            name: nexus.service
            state: stopped
          when: nexus_systemd_service_file.stat.exists

        - name: Run Nexus DB Migrator from backup directory
          ansible.builtin.shell:
            cmd: echo "y" | java -Xmx2703M -Xms2703M -XX:+UseG1GC -XX:MaxDirectMemorySize=2703M -jar nexus-db-migrator-3.70.4-02.jar --migration_type=h2
            chdir: "{{ nexus_backup_dir }}"

        - name: Copy H2 database to Nexus data directory
          become: true
          ansible.builtin.copy:
            src: "{{ nexus_backup_dir }}/nexus.mv.db"
            dest: "{{ nexus_data_dir }}/db/nexus.mv.db"
            owner: nexus
            group: nexus
            mode: "0644"
            remote_src: yes

        - name: Set ownership of Nexus H2 database file
          ansible.builtin.file:
            path: /var/nexus/db/nexus.mv.db
            owner: nexus
            group: nexus
            mode: '0644'

        - name: Ensure nexus.datastore.enabled=true is set in nexus.properties
          ansible.builtin.lineinfile:
            path: /var/nexus/etc/nexus.properties
            regexp: '^nexus\.datastore\.enabled='
            line: 'nexus.datastore.enabled=true'
            create: yes
            owner: nexus
            group: nexus
            mode: '0644'

        # start nexus service after migration
        - name: Start Nexus systemd service
          ansible.builtin.systemd:
            name: nexus.service
            state: started
          when: nexus_systemd_service_file.stat.exists